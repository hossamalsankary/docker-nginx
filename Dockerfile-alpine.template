FROM alpine

LABEL maintainer="NGINX Docker Maintainers <docker-maint@nginx.com>"

ENV NGINX_VERSION=1.24.0
ENV PKG_RELEASE=1

# Install necessary packages
RUN set -x && \
    apk add --no-cache --virtual .build-deps \
        openssl \
        curl \
        gnupg \
        wget \
        && \
    apk add --no-cache \
        tzdata \
        gettext \
        nginx \
        && \
    addgroup -g 101 -S nginx && \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx && \
    # Bring in nginx signing key
    wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub && \
    openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout && \
    mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/ && \
    # Remove unnecessary packages and files
    apk del --no-network .build-deps && \
    rm -rf /tmp/* /var/cache/apk/* && \
    # Forward request and error logs to Docker log collector
    ln -sf /dev/stdout /var/log/nginx/access.log && \
    ln -sf /dev/stderr /var/log/nginx/error.log && \
    # Create a docker-entrypoint.d directory
    mkdir /docker-entrypoint.d

# Copy configuration files
COPY docker-entrypoint.sh /
COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d
COPY 15-local-resolvers.envsh /docker-entrypoint.d
COPY 20-envsubst-on-templates.sh /docker-entrypoint.d
COPY 30-tune-worker-processes.sh /docker-entrypoint.d

# Set the entrypoint and expose port
ENTRYPOINT ["/docker-entrypoint.sh"]
EXPOSE 80

# Set the default command to run nginx
CMD ["nginx", "-g", "daemon off;"]
